@{
  ViewData["Title"] = "Payment";
  @using Car_rental.Data;
  @inject Car_rentalContext _context
Pager pager = new Pager();
  int pageNo = 0;
  var Id = Context.Session.GetInt32("_ID") != null ? Context.Session.GetInt32("_ID") : null;
  if (ViewBag.Pager != null)
  {
    pager = ViewBag.Pager;
    pageNo = pager.CurrentPage;
  }
  var resultCd = Context.Request.Query["resultCd"].FirstOrDefault();
  if (resultCd == "00_000" && Id.HasValue)
  {
    int userId = Id.Value; // Unwrap the nullable int into a non-nullable int
    var userGetCoin = _context.user.Find(userId);


    var checkPaymentHistory = _context.paymentHistory.FirstOrDefault(p => p.Code ==
    Context.Request.Query["merTrxId"].FirstOrDefault());
    if (checkPaymentHistory == null)
    {
      var paymentHistory = new paymentHistory();
      paymentHistory.Code = Context.Request.Query["merTrxId"];
      paymentHistory.timeStamp = DateTime.Now;
      paymentHistory.Amount = Context.Request.Query["amount"];
      paymentHistory.Status = Context.Request.Query["resultMsg"];
      paymentHistory.UserID = Id.HasValue ? Id.Value : 0; // Assuming 0 is a default or sentinel value for an unset user ID
      _context.Add(paymentHistory);


      if (Context.Request.Query["amount"] == "100000")
      {
        userGetCoin.coins = userGetCoin.coins + 100;
        _context.Update(userGetCoin);
      }
      else if (Context.Request.Query["amount"] == "200000")
      {
        userGetCoin.coins = userGetCoin.coins + 200;
        _context.Update(userGetCoin);
      }
      else
      if (Context.Request.Query["amount"] == "500000")
      {
        userGetCoin.coins = userGetCoin.coins + 500;
        _context.Update(userGetCoin);
      }
      else if (Context.Request.Query["amount"] == "1000000")
      {
        userGetCoin.coins = userGetCoin.coins + 1000;
        _context.Update(userGetCoin);
      }
      else if (Context.Request.Query["amount"] == "2000000")
      {
        userGetCoin.coins = userGetCoin.coins + 2000;
        _context.Update(userGetCoin);
      }
      else if (Context.Request.Query["amount"] == "3000000")
      {
        userGetCoin.coins = userGetCoin.coins + 3000;
        _context.Update(userGetCoin);
      }

      _context.SaveChanges();
    }

  }

}
<section class="hero-wrap hero-wrap-2 js-fullheight" style="background-image: url('../../user/images/image_1.jpg');"
  data-stellar-background-ratio="0.5">
  <div class="overlay"></div>
  <div class="container">
    <div class="row no-gutters slider-text js-fullheight align-items-end justify-content-start">
      <div class="col-md-9 ftco-animate pb-5">
        <p class="breadcrumbs"><span class="mr-2"><a href="/">Home <i class="ion-ios-arrow-forward"></i></a></span>
          <span>Get coins status</span>
        </p> <i class="ion-ios-arrow-forward"></i></span></p>
        <h1 class="mb-3 bread">Get coins status</h1>
      </div>
    </div>
  </div>
</section>
<section style="background-color: #eee;">
  <div class="container">
    <div class="row">
      <div class="col-md-12 pills">
        <div class="bd-example bd-example-tabs">
          <div class="d-flex justify-content-center">
            <ul class="nav nav-pills mb-3" id="pills-tab" role="tablist">
              <li class="nav-item">
                <a class="nav-link active" id="pills-description-tab" data-toggle="pill" href="#pills-description"
                  role="tab" aria-controls="pills-description" aria-expanded="true">Payment Infor</a>
              </li>
            </ul>
          </div>
          <div class="tab-content" id="pills-tabContent">
            <div class="tab-pane fade show active" id="pills-description" role="tabpanel"
              aria-labelledby="pills-description-tab">
              <div class="row">
                <div class="table-responsive">
                  <table class="table table-hover">
                    <thead style="background-color: #01d28e; color: white; font-weight: bold; text-align: center;">
                      <th>
                        Code
                      </th>
                      <th>
                        Time
                      </th>
                      <th>
                        Coins
                      </th>
                      <th>
                        Value
                      </th>
                      <th>
                        Status
                      </th>
                    </thead>
                    <tbody>
                      <tr>
                        <td style="text-weight: bold; text-align: center;">
                          @Context.Request.Query["invoiceNo"]
                        </td>
                        <td style="text-weight: bold; text-align: center;">
                          @Context.Request.Query["timeStamp"]
                        </td>
                        <td style="text-weight: bold; text-align: center;">
                          @Context.Request.Query["invoiceNo"]
                        </td>
                        <td style="text-weight: bold; text-align: center;">
                          @Context.Request.Query["amount"]
                        </td>
                        <td style="text-weight: bold; text-align: center; color: green">
                          @Context.Request.Query["resultMsg"]
                        </td>
                      </tr>
                    </tbody>
                  </table>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
</section>